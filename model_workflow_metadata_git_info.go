/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowMetadataGitInfo struct for WorkflowMetadataGitInfo
type WorkflowMetadataGitInfo struct {
	TargetId *string `json:"target_id,omitempty"`
	CommitHash *string `json:"commit_hash,omitempty"`
	ComittedBy *string `json:"comitted_by,omitempty"`
	ComittedOn *string `json:"comitted_on,omitempty"`
	CommitMessage *string `json:"commit_message,omitempty"`
}

// NewWorkflowMetadataGitInfo instantiates a new WorkflowMetadataGitInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowMetadataGitInfo() *WorkflowMetadataGitInfo {
	this := WorkflowMetadataGitInfo{}
	return &this
}

// NewWorkflowMetadataGitInfoWithDefaults instantiates a new WorkflowMetadataGitInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowMetadataGitInfoWithDefaults() *WorkflowMetadataGitInfo {
	this := WorkflowMetadataGitInfo{}
	return &this
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *WorkflowMetadataGitInfo) GetTargetId() string {
	if o == nil || o.TargetId == nil {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMetadataGitInfo) GetTargetIdOk() (*string, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *WorkflowMetadataGitInfo) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *WorkflowMetadataGitInfo) SetTargetId(v string) {
	o.TargetId = &v
}

// GetCommitHash returns the CommitHash field value if set, zero value otherwise.
func (o *WorkflowMetadataGitInfo) GetCommitHash() string {
	if o == nil || o.CommitHash == nil {
		var ret string
		return ret
	}
	return *o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMetadataGitInfo) GetCommitHashOk() (*string, bool) {
	if o == nil || o.CommitHash == nil {
		return nil, false
	}
	return o.CommitHash, true
}

// HasCommitHash returns a boolean if a field has been set.
func (o *WorkflowMetadataGitInfo) HasCommitHash() bool {
	if o != nil && o.CommitHash != nil {
		return true
	}

	return false
}

// SetCommitHash gets a reference to the given string and assigns it to the CommitHash field.
func (o *WorkflowMetadataGitInfo) SetCommitHash(v string) {
	o.CommitHash = &v
}

// GetComittedBy returns the ComittedBy field value if set, zero value otherwise.
func (o *WorkflowMetadataGitInfo) GetComittedBy() string {
	if o == nil || o.ComittedBy == nil {
		var ret string
		return ret
	}
	return *o.ComittedBy
}

// GetComittedByOk returns a tuple with the ComittedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMetadataGitInfo) GetComittedByOk() (*string, bool) {
	if o == nil || o.ComittedBy == nil {
		return nil, false
	}
	return o.ComittedBy, true
}

// HasComittedBy returns a boolean if a field has been set.
func (o *WorkflowMetadataGitInfo) HasComittedBy() bool {
	if o != nil && o.ComittedBy != nil {
		return true
	}

	return false
}

// SetComittedBy gets a reference to the given string and assigns it to the ComittedBy field.
func (o *WorkflowMetadataGitInfo) SetComittedBy(v string) {
	o.ComittedBy = &v
}

// GetComittedOn returns the ComittedOn field value if set, zero value otherwise.
func (o *WorkflowMetadataGitInfo) GetComittedOn() string {
	if o == nil || o.ComittedOn == nil {
		var ret string
		return ret
	}
	return *o.ComittedOn
}

// GetComittedOnOk returns a tuple with the ComittedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMetadataGitInfo) GetComittedOnOk() (*string, bool) {
	if o == nil || o.ComittedOn == nil {
		return nil, false
	}
	return o.ComittedOn, true
}

// HasComittedOn returns a boolean if a field has been set.
func (o *WorkflowMetadataGitInfo) HasComittedOn() bool {
	if o != nil && o.ComittedOn != nil {
		return true
	}

	return false
}

// SetComittedOn gets a reference to the given string and assigns it to the ComittedOn field.
func (o *WorkflowMetadataGitInfo) SetComittedOn(v string) {
	o.ComittedOn = &v
}

// GetCommitMessage returns the CommitMessage field value if set, zero value otherwise.
func (o *WorkflowMetadataGitInfo) GetCommitMessage() string {
	if o == nil || o.CommitMessage == nil {
		var ret string
		return ret
	}
	return *o.CommitMessage
}

// GetCommitMessageOk returns a tuple with the CommitMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMetadataGitInfo) GetCommitMessageOk() (*string, bool) {
	if o == nil || o.CommitMessage == nil {
		return nil, false
	}
	return o.CommitMessage, true
}

// HasCommitMessage returns a boolean if a field has been set.
func (o *WorkflowMetadataGitInfo) HasCommitMessage() bool {
	if o != nil && o.CommitMessage != nil {
		return true
	}

	return false
}

// SetCommitMessage gets a reference to the given string and assigns it to the CommitMessage field.
func (o *WorkflowMetadataGitInfo) SetCommitMessage(v string) {
	o.CommitMessage = &v
}

func (o WorkflowMetadataGitInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TargetId != nil {
		toSerialize["target_id"] = o.TargetId
	}
	if o.CommitHash != nil {
		toSerialize["commit_hash"] = o.CommitHash
	}
	if o.ComittedBy != nil {
		toSerialize["comitted_by"] = o.ComittedBy
	}
	if o.ComittedOn != nil {
		toSerialize["comitted_on"] = o.ComittedOn
	}
	if o.CommitMessage != nil {
		toSerialize["commit_message"] = o.CommitMessage
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowMetadataGitInfo struct {
	value *WorkflowMetadataGitInfo
	isSet bool
}

func (v NullableWorkflowMetadataGitInfo) Get() *WorkflowMetadataGitInfo {
	return v.value
}

func (v *NullableWorkflowMetadataGitInfo) Set(val *WorkflowMetadataGitInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowMetadataGitInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowMetadataGitInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowMetadataGitInfo(val *WorkflowMetadataGitInfo) *NullableWorkflowMetadataGitInfo {
	return &NullableWorkflowMetadataGitInfo{value: val, isSet: true}
}

func (v NullableWorkflowMetadataGitInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowMetadataGitInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


