/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// DeviceTemplateUpdateDetails struct for DeviceTemplateUpdateDetails
type DeviceTemplateUpdateDetails struct {
	TemplateHistoryId *string `json:"templateHistoryId,omitempty"`
	TemplateParams *[]NameValue `json:"templateParams,omitempty"`
}

// NewDeviceTemplateUpdateDetails instantiates a new DeviceTemplateUpdateDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceTemplateUpdateDetails() *DeviceTemplateUpdateDetails {
	this := DeviceTemplateUpdateDetails{}
	return &this
}

// NewDeviceTemplateUpdateDetailsWithDefaults instantiates a new DeviceTemplateUpdateDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceTemplateUpdateDetailsWithDefaults() *DeviceTemplateUpdateDetails {
	this := DeviceTemplateUpdateDetails{}
	return &this
}

// GetTemplateHistoryId returns the TemplateHistoryId field value if set, zero value otherwise.
func (o *DeviceTemplateUpdateDetails) GetTemplateHistoryId() string {
	if o == nil || o.TemplateHistoryId == nil {
		var ret string
		return ret
	}
	return *o.TemplateHistoryId
}

// GetTemplateHistoryIdOk returns a tuple with the TemplateHistoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceTemplateUpdateDetails) GetTemplateHistoryIdOk() (*string, bool) {
	if o == nil || o.TemplateHistoryId == nil {
		return nil, false
	}
	return o.TemplateHistoryId, true
}

// HasTemplateHistoryId returns a boolean if a field has been set.
func (o *DeviceTemplateUpdateDetails) HasTemplateHistoryId() bool {
	if o != nil && o.TemplateHistoryId != nil {
		return true
	}

	return false
}

// SetTemplateHistoryId gets a reference to the given string and assigns it to the TemplateHistoryId field.
func (o *DeviceTemplateUpdateDetails) SetTemplateHistoryId(v string) {
	o.TemplateHistoryId = &v
}

// GetTemplateParams returns the TemplateParams field value if set, zero value otherwise.
func (o *DeviceTemplateUpdateDetails) GetTemplateParams() []NameValue {
	if o == nil || o.TemplateParams == nil {
		var ret []NameValue
		return ret
	}
	return *o.TemplateParams
}

// GetTemplateParamsOk returns a tuple with the TemplateParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceTemplateUpdateDetails) GetTemplateParamsOk() (*[]NameValue, bool) {
	if o == nil || o.TemplateParams == nil {
		return nil, false
	}
	return o.TemplateParams, true
}

// HasTemplateParams returns a boolean if a field has been set.
func (o *DeviceTemplateUpdateDetails) HasTemplateParams() bool {
	if o != nil && o.TemplateParams != nil {
		return true
	}

	return false
}

// SetTemplateParams gets a reference to the given []NameValue and assigns it to the TemplateParams field.
func (o *DeviceTemplateUpdateDetails) SetTemplateParams(v []NameValue) {
	o.TemplateParams = &v
}

func (o DeviceTemplateUpdateDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TemplateHistoryId != nil {
		toSerialize["templateHistoryId"] = o.TemplateHistoryId
	}
	if o.TemplateParams != nil {
		toSerialize["templateParams"] = o.TemplateParams
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceTemplateUpdateDetails struct {
	value *DeviceTemplateUpdateDetails
	isSet bool
}

func (v NullableDeviceTemplateUpdateDetails) Get() *DeviceTemplateUpdateDetails {
	return v.value
}

func (v *NullableDeviceTemplateUpdateDetails) Set(val *DeviceTemplateUpdateDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceTemplateUpdateDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceTemplateUpdateDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceTemplateUpdateDetails(val *DeviceTemplateUpdateDetails) *NullableDeviceTemplateUpdateDetails {
	return &NullableDeviceTemplateUpdateDetails{value: val, isSet: true}
}

func (v NullableDeviceTemplateUpdateDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceTemplateUpdateDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


