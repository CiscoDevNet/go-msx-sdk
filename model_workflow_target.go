/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 3.10.0
 * Contact: somecontact@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowTarget struct for WorkflowTarget
type WorkflowTarget struct {
	Id *string `json:"id,omitempty"`
	SchemaId *string `json:"schema_id,omitempty"`
	AdapterId *string `json:"adapter_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
	BaseType *string `json:"base_type,omitempty"`
	Properties *map[string]map[string]interface{} `json:"properties,omitempty"`
	Valid *bool `json:"valid,omitempty"`
	DefAccessMeta *WorkflowDefAccessMeta `json:"def_access_meta,omitempty"`
	CreatedOn *string `json:"created_on,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	UpdatedOn *string `json:"updated_on,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
	Owner *string `json:"owner,omitempty"`
	UniqueName *string `json:"unique_name,omitempty"`
}

// NewWorkflowTarget instantiates a new WorkflowTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowTarget() *WorkflowTarget {
	this := WorkflowTarget{}
	return &this
}

// NewWorkflowTargetWithDefaults instantiates a new WorkflowTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowTargetWithDefaults() *WorkflowTarget {
	this := WorkflowTarget{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowTarget) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowTarget) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowTarget) SetId(v string) {
	o.Id = &v
}

// GetSchemaId returns the SchemaId field value if set, zero value otherwise.
func (o *WorkflowTarget) GetSchemaId() string {
	if o == nil || o.SchemaId == nil {
		var ret string
		return ret
	}
	return *o.SchemaId
}

// GetSchemaIdOk returns a tuple with the SchemaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetSchemaIdOk() (*string, bool) {
	if o == nil || o.SchemaId == nil {
		return nil, false
	}
	return o.SchemaId, true
}

// HasSchemaId returns a boolean if a field has been set.
func (o *WorkflowTarget) HasSchemaId() bool {
	if o != nil && o.SchemaId != nil {
		return true
	}

	return false
}

// SetSchemaId gets a reference to the given string and assigns it to the SchemaId field.
func (o *WorkflowTarget) SetSchemaId(v string) {
	o.SchemaId = &v
}

// GetAdapterId returns the AdapterId field value if set, zero value otherwise.
func (o *WorkflowTarget) GetAdapterId() string {
	if o == nil || o.AdapterId == nil {
		var ret string
		return ret
	}
	return *o.AdapterId
}

// GetAdapterIdOk returns a tuple with the AdapterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetAdapterIdOk() (*string, bool) {
	if o == nil || o.AdapterId == nil {
		return nil, false
	}
	return o.AdapterId, true
}

// HasAdapterId returns a boolean if a field has been set.
func (o *WorkflowTarget) HasAdapterId() bool {
	if o != nil && o.AdapterId != nil {
		return true
	}

	return false
}

// SetAdapterId gets a reference to the given string and assigns it to the AdapterId field.
func (o *WorkflowTarget) SetAdapterId(v string) {
	o.AdapterId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowTarget) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowTarget) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowTarget) SetName(v string) {
	o.Name = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkflowTarget) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkflowTarget) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkflowTarget) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkflowTarget) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkflowTarget) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkflowTarget) SetType(v string) {
	o.Type = &v
}

// GetBaseType returns the BaseType field value if set, zero value otherwise.
func (o *WorkflowTarget) GetBaseType() string {
	if o == nil || o.BaseType == nil {
		var ret string
		return ret
	}
	return *o.BaseType
}

// GetBaseTypeOk returns a tuple with the BaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetBaseTypeOk() (*string, bool) {
	if o == nil || o.BaseType == nil {
		return nil, false
	}
	return o.BaseType, true
}

// HasBaseType returns a boolean if a field has been set.
func (o *WorkflowTarget) HasBaseType() bool {
	if o != nil && o.BaseType != nil {
		return true
	}

	return false
}

// SetBaseType gets a reference to the given string and assigns it to the BaseType field.
func (o *WorkflowTarget) SetBaseType(v string) {
	o.BaseType = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *WorkflowTarget) GetProperties() map[string]map[string]interface{} {
	if o == nil || o.Properties == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetPropertiesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *WorkflowTarget) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the Properties field.
func (o *WorkflowTarget) SetProperties(v map[string]map[string]interface{}) {
	o.Properties = &v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *WorkflowTarget) GetValid() bool {
	if o == nil || o.Valid == nil {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetValidOk() (*bool, bool) {
	if o == nil || o.Valid == nil {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *WorkflowTarget) HasValid() bool {
	if o != nil && o.Valid != nil {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *WorkflowTarget) SetValid(v bool) {
	o.Valid = &v
}

// GetDefAccessMeta returns the DefAccessMeta field value if set, zero value otherwise.
func (o *WorkflowTarget) GetDefAccessMeta() WorkflowDefAccessMeta {
	if o == nil || o.DefAccessMeta == nil {
		var ret WorkflowDefAccessMeta
		return ret
	}
	return *o.DefAccessMeta
}

// GetDefAccessMetaOk returns a tuple with the DefAccessMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetDefAccessMetaOk() (*WorkflowDefAccessMeta, bool) {
	if o == nil || o.DefAccessMeta == nil {
		return nil, false
	}
	return o.DefAccessMeta, true
}

// HasDefAccessMeta returns a boolean if a field has been set.
func (o *WorkflowTarget) HasDefAccessMeta() bool {
	if o != nil && o.DefAccessMeta != nil {
		return true
	}

	return false
}

// SetDefAccessMeta gets a reference to the given WorkflowDefAccessMeta and assigns it to the DefAccessMeta field.
func (o *WorkflowTarget) SetDefAccessMeta(v WorkflowDefAccessMeta) {
	o.DefAccessMeta = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *WorkflowTarget) GetCreatedOn() string {
	if o == nil || o.CreatedOn == nil {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetCreatedOnOk() (*string, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *WorkflowTarget) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *WorkflowTarget) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkflowTarget) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkflowTarget) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *WorkflowTarget) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetUpdatedOn returns the UpdatedOn field value if set, zero value otherwise.
func (o *WorkflowTarget) GetUpdatedOn() string {
	if o == nil || o.UpdatedOn == nil {
		var ret string
		return ret
	}
	return *o.UpdatedOn
}

// GetUpdatedOnOk returns a tuple with the UpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetUpdatedOnOk() (*string, bool) {
	if o == nil || o.UpdatedOn == nil {
		return nil, false
	}
	return o.UpdatedOn, true
}

// HasUpdatedOn returns a boolean if a field has been set.
func (o *WorkflowTarget) HasUpdatedOn() bool {
	if o != nil && o.UpdatedOn != nil {
		return true
	}

	return false
}

// SetUpdatedOn gets a reference to the given string and assigns it to the UpdatedOn field.
func (o *WorkflowTarget) SetUpdatedOn(v string) {
	o.UpdatedOn = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *WorkflowTarget) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetUpdatedByOk() (*string, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *WorkflowTarget) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *WorkflowTarget) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *WorkflowTarget) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *WorkflowTarget) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *WorkflowTarget) SetOwner(v string) {
	o.Owner = &v
}

// GetUniqueName returns the UniqueName field value if set, zero value otherwise.
func (o *WorkflowTarget) GetUniqueName() string {
	if o == nil || o.UniqueName == nil {
		var ret string
		return ret
	}
	return *o.UniqueName
}

// GetUniqueNameOk returns a tuple with the UniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowTarget) GetUniqueNameOk() (*string, bool) {
	if o == nil || o.UniqueName == nil {
		return nil, false
	}
	return o.UniqueName, true
}

// HasUniqueName returns a boolean if a field has been set.
func (o *WorkflowTarget) HasUniqueName() bool {
	if o != nil && o.UniqueName != nil {
		return true
	}

	return false
}

// SetUniqueName gets a reference to the given string and assigns it to the UniqueName field.
func (o *WorkflowTarget) SetUniqueName(v string) {
	o.UniqueName = &v
}

func (o WorkflowTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SchemaId != nil {
		toSerialize["schema_id"] = o.SchemaId
	}
	if o.AdapterId != nil {
		toSerialize["adapter_id"] = o.AdapterId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.BaseType != nil {
		toSerialize["base_type"] = o.BaseType
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Valid != nil {
		toSerialize["valid"] = o.Valid
	}
	if o.DefAccessMeta != nil {
		toSerialize["def_access_meta"] = o.DefAccessMeta
	}
	if o.CreatedOn != nil {
		toSerialize["created_on"] = o.CreatedOn
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.UpdatedOn != nil {
		toSerialize["updated_on"] = o.UpdatedOn
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.UniqueName != nil {
		toSerialize["unique_name"] = o.UniqueName
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowTarget struct {
	value *WorkflowTarget
	isSet bool
}

func (v NullableWorkflowTarget) Get() *WorkflowTarget {
	return v.value
}

func (v *NullableWorkflowTarget) Set(val *WorkflowTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowTarget(val *WorkflowTarget) *NullableWorkflowTarget {
	return &NullableWorkflowTarget{value: val, isSet: true}
}

func (v NullableWorkflowTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


