/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 3.10.0
 * Contact: somecontact@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowSchemaByTypeResponse struct for WorkflowSchemaByTypeResponse
type WorkflowSchemaByTypeResponse struct {
	ViewSchema *WorkflowSchema `json:"view_schema,omitempty"`
	DataSchema *WorkflowSchema `json:"data_schema,omitempty"`
}

// NewWorkflowSchemaByTypeResponse instantiates a new WorkflowSchemaByTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowSchemaByTypeResponse() *WorkflowSchemaByTypeResponse {
	this := WorkflowSchemaByTypeResponse{}
	return &this
}

// NewWorkflowSchemaByTypeResponseWithDefaults instantiates a new WorkflowSchemaByTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowSchemaByTypeResponseWithDefaults() *WorkflowSchemaByTypeResponse {
	this := WorkflowSchemaByTypeResponse{}
	return &this
}

// GetViewSchema returns the ViewSchema field value if set, zero value otherwise.
func (o *WorkflowSchemaByTypeResponse) GetViewSchema() WorkflowSchema {
	if o == nil || o.ViewSchema == nil {
		var ret WorkflowSchema
		return ret
	}
	return *o.ViewSchema
}

// GetViewSchemaOk returns a tuple with the ViewSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowSchemaByTypeResponse) GetViewSchemaOk() (*WorkflowSchema, bool) {
	if o == nil || o.ViewSchema == nil {
		return nil, false
	}
	return o.ViewSchema, true
}

// HasViewSchema returns a boolean if a field has been set.
func (o *WorkflowSchemaByTypeResponse) HasViewSchema() bool {
	if o != nil && o.ViewSchema != nil {
		return true
	}

	return false
}

// SetViewSchema gets a reference to the given WorkflowSchema and assigns it to the ViewSchema field.
func (o *WorkflowSchemaByTypeResponse) SetViewSchema(v WorkflowSchema) {
	o.ViewSchema = &v
}

// GetDataSchema returns the DataSchema field value if set, zero value otherwise.
func (o *WorkflowSchemaByTypeResponse) GetDataSchema() WorkflowSchema {
	if o == nil || o.DataSchema == nil {
		var ret WorkflowSchema
		return ret
	}
	return *o.DataSchema
}

// GetDataSchemaOk returns a tuple with the DataSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowSchemaByTypeResponse) GetDataSchemaOk() (*WorkflowSchema, bool) {
	if o == nil || o.DataSchema == nil {
		return nil, false
	}
	return o.DataSchema, true
}

// HasDataSchema returns a boolean if a field has been set.
func (o *WorkflowSchemaByTypeResponse) HasDataSchema() bool {
	if o != nil && o.DataSchema != nil {
		return true
	}

	return false
}

// SetDataSchema gets a reference to the given WorkflowSchema and assigns it to the DataSchema field.
func (o *WorkflowSchemaByTypeResponse) SetDataSchema(v WorkflowSchema) {
	o.DataSchema = &v
}

func (o WorkflowSchemaByTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewSchema != nil {
		toSerialize["view_schema"] = o.ViewSchema
	}
	if o.DataSchema != nil {
		toSerialize["data_schema"] = o.DataSchema
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowSchemaByTypeResponse struct {
	value *WorkflowSchemaByTypeResponse
	isSet bool
}

func (v NullableWorkflowSchemaByTypeResponse) Get() *WorkflowSchemaByTypeResponse {
	return v.value
}

func (v *NullableWorkflowSchemaByTypeResponse) Set(val *WorkflowSchemaByTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowSchemaByTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowSchemaByTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowSchemaByTypeResponse(val *WorkflowSchemaByTypeResponse) *NullableWorkflowSchemaByTypeResponse {
	return &NullableWorkflowSchemaByTypeResponse{value: val, isSet: true}
}

func (v NullableWorkflowSchemaByTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowSchemaByTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


