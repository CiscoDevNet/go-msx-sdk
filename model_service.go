/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 3.10.0
 * Contact: somecontact@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// Service struct for Service
type Service struct {
	Id *string `json:"id,omitempty"`
	ProviderId *string `json:"providerId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	UserId *string `json:"userId,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	ModifiedOn *time.Time `json:"modifiedOn,omitempty"`
	ProvisionedOn *time.Time `json:"provisionedOn,omitempty"`
	Status *map[string]string `json:"status,omitempty"`
	DefinitionAttributes *map[string]map[string]interface{} `json:"definitionAttributes,omitempty"`
	Attributes *map[string]map[string]interface{} `json:"attributes,omitempty"`
}

// NewService instantiates a new Service object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewService() *Service {
	this := Service{}
	return &this
}

// NewServiceWithDefaults instantiates a new Service object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceWithDefaults() *Service {
	this := Service{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Service) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Service) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Service) SetId(v string) {
	o.Id = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *Service) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *Service) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *Service) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *Service) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *Service) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *Service) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Service) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Service) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Service) SetUserId(v string) {
	o.UserId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *Service) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *Service) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *Service) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *Service) GetCreatedOn() time.Time {
	if o == nil || o.CreatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *Service) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *Service) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetModifiedOn returns the ModifiedOn field value if set, zero value otherwise.
func (o *Service) GetModifiedOn() time.Time {
	if o == nil || o.ModifiedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil || o.ModifiedOn == nil {
		return nil, false
	}
	return o.ModifiedOn, true
}

// HasModifiedOn returns a boolean if a field has been set.
func (o *Service) HasModifiedOn() bool {
	if o != nil && o.ModifiedOn != nil {
		return true
	}

	return false
}

// SetModifiedOn gets a reference to the given time.Time and assigns it to the ModifiedOn field.
func (o *Service) SetModifiedOn(v time.Time) {
	o.ModifiedOn = &v
}

// GetProvisionedOn returns the ProvisionedOn field value if set, zero value otherwise.
func (o *Service) GetProvisionedOn() time.Time {
	if o == nil || o.ProvisionedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ProvisionedOn
}

// GetProvisionedOnOk returns a tuple with the ProvisionedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetProvisionedOnOk() (*time.Time, bool) {
	if o == nil || o.ProvisionedOn == nil {
		return nil, false
	}
	return o.ProvisionedOn, true
}

// HasProvisionedOn returns a boolean if a field has been set.
func (o *Service) HasProvisionedOn() bool {
	if o != nil && o.ProvisionedOn != nil {
		return true
	}

	return false
}

// SetProvisionedOn gets a reference to the given time.Time and assigns it to the ProvisionedOn field.
func (o *Service) SetProvisionedOn(v time.Time) {
	o.ProvisionedOn = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Service) GetStatus() map[string]string {
	if o == nil || o.Status == nil {
		var ret map[string]string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetStatusOk() (*map[string]string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Service) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given map[string]string and assigns it to the Status field.
func (o *Service) SetStatus(v map[string]string) {
	o.Status = &v
}

// GetDefinitionAttributes returns the DefinitionAttributes field value if set, zero value otherwise.
func (o *Service) GetDefinitionAttributes() map[string]map[string]interface{} {
	if o == nil || o.DefinitionAttributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.DefinitionAttributes
}

// GetDefinitionAttributesOk returns a tuple with the DefinitionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetDefinitionAttributesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.DefinitionAttributes == nil {
		return nil, false
	}
	return o.DefinitionAttributes, true
}

// HasDefinitionAttributes returns a boolean if a field has been set.
func (o *Service) HasDefinitionAttributes() bool {
	if o != nil && o.DefinitionAttributes != nil {
		return true
	}

	return false
}

// SetDefinitionAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the DefinitionAttributes field.
func (o *Service) SetDefinitionAttributes(v map[string]map[string]interface{}) {
	o.DefinitionAttributes = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Service) GetAttributes() map[string]map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Service) GetAttributesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Service) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the Attributes field.
func (o *Service) SetAttributes(v map[string]map[string]interface{}) {
	o.Attributes = &v
}

func (o Service) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProviderId != nil {
		toSerialize["providerId"] = o.ProviderId
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.CreatedOn != nil {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if o.ModifiedOn != nil {
		toSerialize["modifiedOn"] = o.ModifiedOn
	}
	if o.ProvisionedOn != nil {
		toSerialize["provisionedOn"] = o.ProvisionedOn
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.DefinitionAttributes != nil {
		toSerialize["definitionAttributes"] = o.DefinitionAttributes
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableService struct {
	value *Service
	isSet bool
}

func (v NullableService) Get() *Service {
	return v.value
}

func (v *NullableService) Set(val *Service) {
	v.value = val
	v.isSet = true
}

func (v NullableService) IsSet() bool {
	return v.isSet
}

func (v *NullableService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableService(val *Service) *NullableService {
	return &NullableService{value: val, isSet: true}
}

func (v NullableService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


