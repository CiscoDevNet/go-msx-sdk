/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 3.10.0
 * Contact: somecontact@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// DeviceCreate struct for DeviceCreate
type DeviceCreate struct {
	ServiceId *string `json:"serviceId,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	TenantId string `json:"tenantId"`
	Name string `json:"name"`
	Model string `json:"model"`
	Type string `json:"type"`
	SubType *string `json:"subType,omitempty"`
	ServiceType *string `json:"serviceType,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
	SerialKey string `json:"serialKey"`
	Version string `json:"version"`
	Managed bool `json:"managed"`
	OnboardType *string `json:"onboardType,omitempty"`
	OnboardInformation *map[string]string `json:"onboardInformation,omitempty"`
	Attributes *map[string]string `json:"attributes,omitempty"`
	Billing *DeviceBilling `json:"billing,omitempty"`
}

// NewDeviceCreate instantiates a new DeviceCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCreate(tenantId string, name string, model string, type_ string, serialKey string, version string, managed bool, ) *DeviceCreate {
	this := DeviceCreate{}
	this.TenantId = tenantId
	this.Name = name
	this.Model = model
	this.Type = type_
	this.SerialKey = serialKey
	this.Version = version
	this.Managed = managed
	return &this
}

// NewDeviceCreateWithDefaults instantiates a new DeviceCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCreateWithDefaults() *DeviceCreate {
	this := DeviceCreate{}
	var managed bool = false
	this.Managed = managed
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *DeviceCreate) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *DeviceCreate) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *DeviceCreate) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *DeviceCreate) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DeviceCreate) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *DeviceCreate) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTenantId returns the TenantId field value
func (o *DeviceCreate) GetTenantId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *DeviceCreate) SetTenantId(v string) {
	o.TenantId = v
}

// GetName returns the Name field value
func (o *DeviceCreate) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DeviceCreate) SetName(v string) {
	o.Name = v
}

// GetModel returns the Model field value
func (o *DeviceCreate) GetModel() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *DeviceCreate) SetModel(v string) {
	o.Model = v
}

// GetType returns the Type field value
func (o *DeviceCreate) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DeviceCreate) SetType(v string) {
	o.Type = v
}

// GetSubType returns the SubType field value if set, zero value otherwise.
func (o *DeviceCreate) GetSubType() string {
	if o == nil || o.SubType == nil {
		var ret string
		return ret
	}
	return *o.SubType
}

// GetSubTypeOk returns a tuple with the SubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetSubTypeOk() (*string, bool) {
	if o == nil || o.SubType == nil {
		return nil, false
	}
	return o.SubType, true
}

// HasSubType returns a boolean if a field has been set.
func (o *DeviceCreate) HasSubType() bool {
	if o != nil && o.SubType != nil {
		return true
	}

	return false
}

// SetSubType gets a reference to the given string and assigns it to the SubType field.
func (o *DeviceCreate) SetSubType(v string) {
	o.SubType = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *DeviceCreate) GetServiceType() string {
	if o == nil || o.ServiceType == nil {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetServiceTypeOk() (*string, bool) {
	if o == nil || o.ServiceType == nil {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *DeviceCreate) HasServiceType() bool {
	if o != nil && o.ServiceType != nil {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *DeviceCreate) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DeviceCreate) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DeviceCreate) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *DeviceCreate) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetSerialKey returns the SerialKey field value
func (o *DeviceCreate) GetSerialKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SerialKey
}

// GetSerialKeyOk returns a tuple with the SerialKey field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetSerialKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SerialKey, true
}

// SetSerialKey sets field value
func (o *DeviceCreate) SetSerialKey(v string) {
	o.SerialKey = v
}

// GetVersion returns the Version field value
func (o *DeviceCreate) GetVersion() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *DeviceCreate) SetVersion(v string) {
	o.Version = v
}

// GetManaged returns the Managed field value
func (o *DeviceCreate) GetManaged() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Managed
}

// GetManagedOk returns a tuple with the Managed field value
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetManagedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Managed, true
}

// SetManaged sets field value
func (o *DeviceCreate) SetManaged(v bool) {
	o.Managed = v
}

// GetOnboardType returns the OnboardType field value if set, zero value otherwise.
func (o *DeviceCreate) GetOnboardType() string {
	if o == nil || o.OnboardType == nil {
		var ret string
		return ret
	}
	return *o.OnboardType
}

// GetOnboardTypeOk returns a tuple with the OnboardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetOnboardTypeOk() (*string, bool) {
	if o == nil || o.OnboardType == nil {
		return nil, false
	}
	return o.OnboardType, true
}

// HasOnboardType returns a boolean if a field has been set.
func (o *DeviceCreate) HasOnboardType() bool {
	if o != nil && o.OnboardType != nil {
		return true
	}

	return false
}

// SetOnboardType gets a reference to the given string and assigns it to the OnboardType field.
func (o *DeviceCreate) SetOnboardType(v string) {
	o.OnboardType = &v
}

// GetOnboardInformation returns the OnboardInformation field value if set, zero value otherwise.
func (o *DeviceCreate) GetOnboardInformation() map[string]string {
	if o == nil || o.OnboardInformation == nil {
		var ret map[string]string
		return ret
	}
	return *o.OnboardInformation
}

// GetOnboardInformationOk returns a tuple with the OnboardInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetOnboardInformationOk() (*map[string]string, bool) {
	if o == nil || o.OnboardInformation == nil {
		return nil, false
	}
	return o.OnboardInformation, true
}

// HasOnboardInformation returns a boolean if a field has been set.
func (o *DeviceCreate) HasOnboardInformation() bool {
	if o != nil && o.OnboardInformation != nil {
		return true
	}

	return false
}

// SetOnboardInformation gets a reference to the given map[string]string and assigns it to the OnboardInformation field.
func (o *DeviceCreate) SetOnboardInformation(v map[string]string) {
	o.OnboardInformation = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *DeviceCreate) GetAttributes() map[string]string {
	if o == nil || o.Attributes == nil {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *DeviceCreate) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *DeviceCreate) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetBilling returns the Billing field value if set, zero value otherwise.
func (o *DeviceCreate) GetBilling() DeviceBilling {
	if o == nil || o.Billing == nil {
		var ret DeviceBilling
		return ret
	}
	return *o.Billing
}

// GetBillingOk returns a tuple with the Billing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCreate) GetBillingOk() (*DeviceBilling, bool) {
	if o == nil || o.Billing == nil {
		return nil, false
	}
	return o.Billing, true
}

// HasBilling returns a boolean if a field has been set.
func (o *DeviceCreate) HasBilling() bool {
	if o != nil && o.Billing != nil {
		return true
	}

	return false
}

// SetBilling gets a reference to the given DeviceBilling and assigns it to the Billing field.
func (o *DeviceCreate) SetBilling(v DeviceBilling) {
	o.Billing = &v
}

func (o DeviceCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceId != nil {
		toSerialize["serviceId"] = o.ServiceId
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["model"] = o.Model
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.SubType != nil {
		toSerialize["subType"] = o.SubType
	}
	if o.ServiceType != nil {
		toSerialize["serviceType"] = o.ServiceType
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["serialKey"] = o.SerialKey
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["managed"] = o.Managed
	}
	if o.OnboardType != nil {
		toSerialize["onboardType"] = o.OnboardType
	}
	if o.OnboardInformation != nil {
		toSerialize["onboardInformation"] = o.OnboardInformation
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Billing != nil {
		toSerialize["billing"] = o.Billing
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceCreate struct {
	value *DeviceCreate
	isSet bool
}

func (v NullableDeviceCreate) Get() *DeviceCreate {
	return v.value
}

func (v *NullableDeviceCreate) Set(val *DeviceCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCreate(val *DeviceCreate) *NullableDeviceCreate {
	return &NullableDeviceCreate{value: val, isSet: true}
}

func (v NullableDeviceCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


