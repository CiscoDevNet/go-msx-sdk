/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 3.10.0
 * Contact: somecontact@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowStartConfig struct for WorkflowStartConfig
type WorkflowStartConfig struct {
	InputVariables *[]WorkflowVariable `json:"input_variables,omitempty"`
	TypeOfTargetNeeded *string `json:"type_of_target_needed,omitempty"`
	TargetId *string `json:"target_id,omitempty"`
}

// NewWorkflowStartConfig instantiates a new WorkflowStartConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowStartConfig() *WorkflowStartConfig {
	this := WorkflowStartConfig{}
	return &this
}

// NewWorkflowStartConfigWithDefaults instantiates a new WorkflowStartConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowStartConfigWithDefaults() *WorkflowStartConfig {
	this := WorkflowStartConfig{}
	return &this
}

// GetInputVariables returns the InputVariables field value if set, zero value otherwise.
func (o *WorkflowStartConfig) GetInputVariables() []WorkflowVariable {
	if o == nil || o.InputVariables == nil {
		var ret []WorkflowVariable
		return ret
	}
	return *o.InputVariables
}

// GetInputVariablesOk returns a tuple with the InputVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStartConfig) GetInputVariablesOk() (*[]WorkflowVariable, bool) {
	if o == nil || o.InputVariables == nil {
		return nil, false
	}
	return o.InputVariables, true
}

// HasInputVariables returns a boolean if a field has been set.
func (o *WorkflowStartConfig) HasInputVariables() bool {
	if o != nil && o.InputVariables != nil {
		return true
	}

	return false
}

// SetInputVariables gets a reference to the given []WorkflowVariable and assigns it to the InputVariables field.
func (o *WorkflowStartConfig) SetInputVariables(v []WorkflowVariable) {
	o.InputVariables = &v
}

// GetTypeOfTargetNeeded returns the TypeOfTargetNeeded field value if set, zero value otherwise.
func (o *WorkflowStartConfig) GetTypeOfTargetNeeded() string {
	if o == nil || o.TypeOfTargetNeeded == nil {
		var ret string
		return ret
	}
	return *o.TypeOfTargetNeeded
}

// GetTypeOfTargetNeededOk returns a tuple with the TypeOfTargetNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStartConfig) GetTypeOfTargetNeededOk() (*string, bool) {
	if o == nil || o.TypeOfTargetNeeded == nil {
		return nil, false
	}
	return o.TypeOfTargetNeeded, true
}

// HasTypeOfTargetNeeded returns a boolean if a field has been set.
func (o *WorkflowStartConfig) HasTypeOfTargetNeeded() bool {
	if o != nil && o.TypeOfTargetNeeded != nil {
		return true
	}

	return false
}

// SetTypeOfTargetNeeded gets a reference to the given string and assigns it to the TypeOfTargetNeeded field.
func (o *WorkflowStartConfig) SetTypeOfTargetNeeded(v string) {
	o.TypeOfTargetNeeded = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *WorkflowStartConfig) GetTargetId() string {
	if o == nil || o.TargetId == nil {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStartConfig) GetTargetIdOk() (*string, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *WorkflowStartConfig) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *WorkflowStartConfig) SetTargetId(v string) {
	o.TargetId = &v
}

func (o WorkflowStartConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InputVariables != nil {
		toSerialize["input_variables"] = o.InputVariables
	}
	if o.TypeOfTargetNeeded != nil {
		toSerialize["type_of_target_needed"] = o.TypeOfTargetNeeded
	}
	if o.TargetId != nil {
		toSerialize["target_id"] = o.TargetId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowStartConfig struct {
	value *WorkflowStartConfig
	isSet bool
}

func (v NullableWorkflowStartConfig) Get() *WorkflowStartConfig {
	return v.value
}

func (v *NullableWorkflowStartConfig) Set(val *WorkflowStartConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowStartConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowStartConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowStartConfig(val *WorkflowStartConfig) *NullableWorkflowStartConfig {
	return &NullableWorkflowStartConfig{value: val, isSet: true}
}

func (v NullableWorkflowStartConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowStartConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


