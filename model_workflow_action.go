/*
 * KAKAPO - MSX SDK
 *
 * MSX Platform SDK
 *
 * API version: 3.10.0
 * Contact: somecontact@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowAction struct for WorkflowAction
type WorkflowAction struct {
	Id *string `json:"id,omitempty"`
	WorkflowId *string `json:"workflow_id,omitempty"`
	DefinitionId *string `json:"definition_id,omitempty"`
	SchemaId *string `json:"schema_id,omitempty"`
	AdapterId *string `json:"adapter_id,omitempty"`
	UniqueName *string `json:"unique_name,omitempty"`
	Name *string `json:"name,omitempty"`
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
	BaseType *string `json:"base_type,omitempty"`
	Properties *map[string]map[string]interface{} `json:"properties,omitempty"`
	ObjectType *string `json:"object_type,omitempty"`
	StartedBy *string `json:"started_by,omitempty"`
	Blocks *[]WorkflowActionBlock `json:"blocks,omitempty"`
	Status *map[string]map[string]interface{} `json:"status,omitempty"`
	Description *string `json:"description,omitempty"`
	Output *map[string]map[string]interface{} `json:"output,omitempty"`
	StartedOn *string `json:"started_on,omitempty"`
	EndedOn *string `json:"ended_on,omitempty"`
}

// NewWorkflowAction instantiates a new WorkflowAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowAction() *WorkflowAction {
	this := WorkflowAction{}
	return &this
}

// NewWorkflowActionWithDefaults instantiates a new WorkflowAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowActionWithDefaults() *WorkflowAction {
	this := WorkflowAction{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowAction) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowAction) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowAction) SetId(v string) {
	o.Id = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *WorkflowAction) GetWorkflowId() string {
	if o == nil || o.WorkflowId == nil {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetWorkflowIdOk() (*string, bool) {
	if o == nil || o.WorkflowId == nil {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *WorkflowAction) HasWorkflowId() bool {
	if o != nil && o.WorkflowId != nil {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *WorkflowAction) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetDefinitionId returns the DefinitionId field value if set, zero value otherwise.
func (o *WorkflowAction) GetDefinitionId() string {
	if o == nil || o.DefinitionId == nil {
		var ret string
		return ret
	}
	return *o.DefinitionId
}

// GetDefinitionIdOk returns a tuple with the DefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetDefinitionIdOk() (*string, bool) {
	if o == nil || o.DefinitionId == nil {
		return nil, false
	}
	return o.DefinitionId, true
}

// HasDefinitionId returns a boolean if a field has been set.
func (o *WorkflowAction) HasDefinitionId() bool {
	if o != nil && o.DefinitionId != nil {
		return true
	}

	return false
}

// SetDefinitionId gets a reference to the given string and assigns it to the DefinitionId field.
func (o *WorkflowAction) SetDefinitionId(v string) {
	o.DefinitionId = &v
}

// GetSchemaId returns the SchemaId field value if set, zero value otherwise.
func (o *WorkflowAction) GetSchemaId() string {
	if o == nil || o.SchemaId == nil {
		var ret string
		return ret
	}
	return *o.SchemaId
}

// GetSchemaIdOk returns a tuple with the SchemaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetSchemaIdOk() (*string, bool) {
	if o == nil || o.SchemaId == nil {
		return nil, false
	}
	return o.SchemaId, true
}

// HasSchemaId returns a boolean if a field has been set.
func (o *WorkflowAction) HasSchemaId() bool {
	if o != nil && o.SchemaId != nil {
		return true
	}

	return false
}

// SetSchemaId gets a reference to the given string and assigns it to the SchemaId field.
func (o *WorkflowAction) SetSchemaId(v string) {
	o.SchemaId = &v
}

// GetAdapterId returns the AdapterId field value if set, zero value otherwise.
func (o *WorkflowAction) GetAdapterId() string {
	if o == nil || o.AdapterId == nil {
		var ret string
		return ret
	}
	return *o.AdapterId
}

// GetAdapterIdOk returns a tuple with the AdapterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetAdapterIdOk() (*string, bool) {
	if o == nil || o.AdapterId == nil {
		return nil, false
	}
	return o.AdapterId, true
}

// HasAdapterId returns a boolean if a field has been set.
func (o *WorkflowAction) HasAdapterId() bool {
	if o != nil && o.AdapterId != nil {
		return true
	}

	return false
}

// SetAdapterId gets a reference to the given string and assigns it to the AdapterId field.
func (o *WorkflowAction) SetAdapterId(v string) {
	o.AdapterId = &v
}

// GetUniqueName returns the UniqueName field value if set, zero value otherwise.
func (o *WorkflowAction) GetUniqueName() string {
	if o == nil || o.UniqueName == nil {
		var ret string
		return ret
	}
	return *o.UniqueName
}

// GetUniqueNameOk returns a tuple with the UniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetUniqueNameOk() (*string, bool) {
	if o == nil || o.UniqueName == nil {
		return nil, false
	}
	return o.UniqueName, true
}

// HasUniqueName returns a boolean if a field has been set.
func (o *WorkflowAction) HasUniqueName() bool {
	if o != nil && o.UniqueName != nil {
		return true
	}

	return false
}

// SetUniqueName gets a reference to the given string and assigns it to the UniqueName field.
func (o *WorkflowAction) SetUniqueName(v string) {
	o.UniqueName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowAction) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowAction) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowAction) SetName(v string) {
	o.Name = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkflowAction) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkflowAction) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkflowAction) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkflowAction) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkflowAction) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkflowAction) SetType(v string) {
	o.Type = &v
}

// GetBaseType returns the BaseType field value if set, zero value otherwise.
func (o *WorkflowAction) GetBaseType() string {
	if o == nil || o.BaseType == nil {
		var ret string
		return ret
	}
	return *o.BaseType
}

// GetBaseTypeOk returns a tuple with the BaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetBaseTypeOk() (*string, bool) {
	if o == nil || o.BaseType == nil {
		return nil, false
	}
	return o.BaseType, true
}

// HasBaseType returns a boolean if a field has been set.
func (o *WorkflowAction) HasBaseType() bool {
	if o != nil && o.BaseType != nil {
		return true
	}

	return false
}

// SetBaseType gets a reference to the given string and assigns it to the BaseType field.
func (o *WorkflowAction) SetBaseType(v string) {
	o.BaseType = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *WorkflowAction) GetProperties() map[string]map[string]interface{} {
	if o == nil || o.Properties == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetPropertiesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *WorkflowAction) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the Properties field.
func (o *WorkflowAction) SetProperties(v map[string]map[string]interface{}) {
	o.Properties = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *WorkflowAction) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *WorkflowAction) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *WorkflowAction) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetStartedBy returns the StartedBy field value if set, zero value otherwise.
func (o *WorkflowAction) GetStartedBy() string {
	if o == nil || o.StartedBy == nil {
		var ret string
		return ret
	}
	return *o.StartedBy
}

// GetStartedByOk returns a tuple with the StartedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetStartedByOk() (*string, bool) {
	if o == nil || o.StartedBy == nil {
		return nil, false
	}
	return o.StartedBy, true
}

// HasStartedBy returns a boolean if a field has been set.
func (o *WorkflowAction) HasStartedBy() bool {
	if o != nil && o.StartedBy != nil {
		return true
	}

	return false
}

// SetStartedBy gets a reference to the given string and assigns it to the StartedBy field.
func (o *WorkflowAction) SetStartedBy(v string) {
	o.StartedBy = &v
}

// GetBlocks returns the Blocks field value if set, zero value otherwise.
func (o *WorkflowAction) GetBlocks() []WorkflowActionBlock {
	if o == nil || o.Blocks == nil {
		var ret []WorkflowActionBlock
		return ret
	}
	return *o.Blocks
}

// GetBlocksOk returns a tuple with the Blocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetBlocksOk() (*[]WorkflowActionBlock, bool) {
	if o == nil || o.Blocks == nil {
		return nil, false
	}
	return o.Blocks, true
}

// HasBlocks returns a boolean if a field has been set.
func (o *WorkflowAction) HasBlocks() bool {
	if o != nil && o.Blocks != nil {
		return true
	}

	return false
}

// SetBlocks gets a reference to the given []WorkflowActionBlock and assigns it to the Blocks field.
func (o *WorkflowAction) SetBlocks(v []WorkflowActionBlock) {
	o.Blocks = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkflowAction) GetStatus() map[string]map[string]interface{} {
	if o == nil || o.Status == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetStatusOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkflowAction) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given map[string]map[string]interface{} and assigns it to the Status field.
func (o *WorkflowAction) SetStatus(v map[string]map[string]interface{}) {
	o.Status = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkflowAction) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkflowAction) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkflowAction) SetDescription(v string) {
	o.Description = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *WorkflowAction) GetOutput() map[string]map[string]interface{} {
	if o == nil || o.Output == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetOutputOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Output == nil {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *WorkflowAction) HasOutput() bool {
	if o != nil && o.Output != nil {
		return true
	}

	return false
}

// SetOutput gets a reference to the given map[string]map[string]interface{} and assigns it to the Output field.
func (o *WorkflowAction) SetOutput(v map[string]map[string]interface{}) {
	o.Output = &v
}

// GetStartedOn returns the StartedOn field value if set, zero value otherwise.
func (o *WorkflowAction) GetStartedOn() string {
	if o == nil || o.StartedOn == nil {
		var ret string
		return ret
	}
	return *o.StartedOn
}

// GetStartedOnOk returns a tuple with the StartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetStartedOnOk() (*string, bool) {
	if o == nil || o.StartedOn == nil {
		return nil, false
	}
	return o.StartedOn, true
}

// HasStartedOn returns a boolean if a field has been set.
func (o *WorkflowAction) HasStartedOn() bool {
	if o != nil && o.StartedOn != nil {
		return true
	}

	return false
}

// SetStartedOn gets a reference to the given string and assigns it to the StartedOn field.
func (o *WorkflowAction) SetStartedOn(v string) {
	o.StartedOn = &v
}

// GetEndedOn returns the EndedOn field value if set, zero value otherwise.
func (o *WorkflowAction) GetEndedOn() string {
	if o == nil || o.EndedOn == nil {
		var ret string
		return ret
	}
	return *o.EndedOn
}

// GetEndedOnOk returns a tuple with the EndedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAction) GetEndedOnOk() (*string, bool) {
	if o == nil || o.EndedOn == nil {
		return nil, false
	}
	return o.EndedOn, true
}

// HasEndedOn returns a boolean if a field has been set.
func (o *WorkflowAction) HasEndedOn() bool {
	if o != nil && o.EndedOn != nil {
		return true
	}

	return false
}

// SetEndedOn gets a reference to the given string and assigns it to the EndedOn field.
func (o *WorkflowAction) SetEndedOn(v string) {
	o.EndedOn = &v
}

func (o WorkflowAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.WorkflowId != nil {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	if o.DefinitionId != nil {
		toSerialize["definition_id"] = o.DefinitionId
	}
	if o.SchemaId != nil {
		toSerialize["schema_id"] = o.SchemaId
	}
	if o.AdapterId != nil {
		toSerialize["adapter_id"] = o.AdapterId
	}
	if o.UniqueName != nil {
		toSerialize["unique_name"] = o.UniqueName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.BaseType != nil {
		toSerialize["base_type"] = o.BaseType
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.StartedBy != nil {
		toSerialize["started_by"] = o.StartedBy
	}
	if o.Blocks != nil {
		toSerialize["blocks"] = o.Blocks
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Output != nil {
		toSerialize["output"] = o.Output
	}
	if o.StartedOn != nil {
		toSerialize["started_on"] = o.StartedOn
	}
	if o.EndedOn != nil {
		toSerialize["ended_on"] = o.EndedOn
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowAction struct {
	value *WorkflowAction
	isSet bool
}

func (v NullableWorkflowAction) Get() *WorkflowAction {
	return v.value
}

func (v *NullableWorkflowAction) Set(val *WorkflowAction) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowAction) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowAction(val *WorkflowAction) *NullableWorkflowAction {
	return &NullableWorkflowAction{value: val, isSet: true}
}

func (v NullableWorkflowAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


